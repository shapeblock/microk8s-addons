#!/usr/bin/env python3

import click
import os
import subprocess
from string import Template
import base64

KUBECTL = os.path.expandvars("$SNAP/microk8s-kubectl.wrapper")

# Define the cluster_issuer template with a placeholder for email

@click.command()
@click.option("--sb-url", required=True, type=str)
@click.option("--cluster-uuid", required=True, type=str)
@click.option("--registry", required=True, type=str)
@click.option("--username", required=True, type=str)
@click.option("--password", required=True, type=str)
def main(sb_url, cluster_uuid, registry, username, password):
    current_path = os.path.dirname(os.path.realpath(__file__))
    click.echo("Creating SB operator")
    sb_operator_template = Template(open(f'{current_path}/sb-operator.yaml').read())
    sb_operator_manifest = sb_operator_template.substitute(sb_url=sb_url, cluster_uuid=cluster_uuid)
    subprocess.run([KUBECTL, "apply", "-f", "-"], input=sb_operator_manifest.encode())
    click.echo("Created SB operator")

    click.echo("Creating kpack artefacts")
    kpack_artefacts = open(f'{current_path}/kpack-artefacts.yaml').read()
    subprocess.run([KUBECTL, "apply", "-f", "-"], input=kpack_artefacts.encode())
    click.echo("Created kpack artefacts")

    click.echo("Creating Helm repository")
    helm_repository = open(f'{current_path}/helm-repository.yaml').read()
    subprocess.run([KUBECTL, "apply", "-f", "-"], input=helm_repository.encode())
    click.echo("Created Helm repository")

    click.echo("Creating Bitnami repository")
    bitnami_repository = open(f'{current_path}/bitnami-repository.yaml').read()
    subprocess.run([KUBECTL, "apply", "-f", "-"], input=bitnami_repository.encode())
    click.echo("Created Bitnami repository")

    click.echo("Creating registry credentials")
    subprocess.run([KUBECTL,
                  "create", "secret", "docker-registry", "registry-creds",
                  f"--docker-username={username}",
                  f"--docker-password={password}",
                  f"--docker-server={registry}"
                  ])
    click.echo("Created registry credentials")

if __name__ == "__main__":
    main()
